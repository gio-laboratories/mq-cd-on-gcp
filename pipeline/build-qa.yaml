steps:
- name: gcr.io/cloud-builders/git
  id: Generate Git Diff
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      git fetch origin
      git diff origin/main --output /workspace/diff.txt
      cat /workspace/diff.txt
- id: Use Vertex AI to provide automated Release Notes
  name: 'europe-west1-docker.pkg.dev/$PROJECT_ID/default/friendly-cicd-helper'
  entrypoint: sh
  args:
  - -c
  - |
    export VERTEX_GCP_PROJECT=$PROJECT_ID
    echo "## Automated Suggestions for Release Notes (generated by Vertex AI)" | tee mergerequest-release-notes.md

    friendly-cicd-helper vertex-release-notes --diff /workspace/diff.txt | tee -a mergerequest-release-notes.md
    printf "\n\nView details in Cloud Build (permission required) https://console.cloud.google.com/cloud-build/builds/$BUILD_ID?project=$PROJECT_ID" | tee -a mergerequest-release-notes.md

    MERGE_REQUEST_IID=$$(friendly-cicd-helper gitlab-mergerequest --project $_GITLAB_PROJECT --source $_HEAD_BRANCH)
    cat mergerequest-release-notes.md | friendly-cicd-helper gitlab-comment --project $_GITLAB_PROJECT --mergerequest $$(cat /workspace/gitlab_merge_request_iid)
  secretEnv: ['GITLAB_TOKEN']

- name: gcr.io/k8s-skaffold/skaffold
  id: Build the image with Skaffold
  entrypoint: /bin/bash
  args:
    - -c
    - |
      skaffold build --interactive=false --file-output=/workspace/artifacts.json --default-repo=europe-docker.pkg.dev/$PROJECT_ID/cloudbuilds --push=true
      docker image inspect europe-docker.pkg.dev/$PROJECT_ID/cloudbuilds/cdongcp-app:${SHORT_SHA} --format '{{index .RepoDigests 0}}' > image-digest.txt &&
      cat image-digest.txt
- name: gcr.io/$PROJECT_ID/kritis-signer
  id: Scan the image for vulnerabilities
  entrypoint: /bin/bash
  args:
  - -c
  - |
    /kritis/signer \
    -v=10 \
    -alsologtostderr \
    -image=$(/bin/cat image-digest.txt) \
    -policy=pipeline/vulnz-signing-policy.yaml \
    -kms_key_name=${_KMS_KEY_NAME} \
    -kms_digest_alg=${_KMS_DIGEST_ALG} \
    -note_name=${_NOTE_NAME}
  waitFor: ['Build the image with Skaffold']
- id: Create a release in Cloud Deploy and rollout to QA
  name: gcr.io/cloud-builders/gcloud
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      gcloud deploy releases create cdongcp-${SHORT_SHA} --delivery-pipeline cd-on-gcp-pipeline \
          --region europe-west1 --annotations "commitId=${REVISION_ID}" --build-artifacts /workspace/artifacts.json
  waitFor: ['Scan the image for vulnerabilities']

images:
- europe-docker.pkg.dev/$PROJECT_ID/cloudbuilds/cdongcp-app:${SHORT_SHA}
options:
  requestedVerifyOption: VERIFIED

availableSecrets:
  secretManager:
  - versionName: projects/257885841248/secrets/cloudbuild-gitlab-1700567779965-api-access-token/versions/1
    env: 'GITLAB_TOKEN'

substitutions:
  _GITLAB_PROJECT: galloro/cd-on-gcp

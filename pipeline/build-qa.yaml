steps:

- name: gcr.io/k8s-skaffold/skaffold
  id: Build the image with Skaffold
  entrypoint: /bin/bash
  args:
    - -c
    - |
      skaffold build --interactive=false --file-output=/workspace/artifacts.json --default-repo=europe-docker.pkg.dev/$PROJECT_ID/cloudbuilds --push=true
      docker image inspect europe-docker.pkg.dev/$PROJECT_ID/cloudbuilds/cdongcp-app:${SHORT_SHA} --format '{{index .RepoDigests 0}}' > image-digest.txt &&
      cat image-digest.txt

- name: gcr.io/$PROJECT_ID/kritis-signer
  id: Scan the image for vulnerabilities
  entrypoint: /bin/bash
  args:
  - -c
  - |
    /kritis/signer \
    -v=10 \
    -alsologtostderr \
    -image=$(/bin/cat image-digest.txt) \
    -policy=pipeline/vulnz-signing-policy.yaml \
    -kms_key_name=${_KMS_KEY_NAME} \
    -kms_digest_alg=${_KMS_DIGEST_ALG} \
    -note_name=${_NOTE_NAME}
  waitFor: ['Build the image with Skaffold']

- id: Create a release in Cloud Deploy and rollout to QA
  name: gcr.io/cloud-builders/gcloud
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      gcloud deploy releases create cdongcp-${SHORT_SHA} --delivery-pipeline cd-on-gcp-pipeline \
          --region europe-west1 --annotations "commitId=${REVISION_ID}" --build-artifacts /workspace/artifacts.json
  waitFor: ['Scan the image for vulnerabilities']

images:
- europe-docker.pkg.dev/$PROJECT_ID/cloudbuilds/cdongcp-app:${SHORT_SHA}
options:
  requestedVerifyOption: VERIFIED
